CREATE TABLE civilite(
  civilite_index integer primary key,
  civilite text not null
);

CREATE TABLE resultat (
  resultat_index integer primary key,
  resultat text not null
);

CREATE TABLE commune(
  commune_index integer primary key,
  commune text not null
);

CREATE TABLE voie (
  code_voie integer primary key,
  voie text not null
);

CREATE TABLE puissance {
  code_puissance integer primary key,
  puissance text not null
}

CREATE TABLE qualite {
  code_qualite integer primary key,
  qualite text not null
}

CREATE TABLE etat_dossier {
  code_etat_dossier integer primary key,
  etat_dossier text not null
}

CREATE TABLE pays(
  pays_code integer primary key,
  liste_pays text
);

CREATE TABLE ecole (
  code integer primary key,
  nom text not null
);

CREATE TABLE voeux_ecole  (
  can_code integer not null,
  voe_rang integer not null,
  voe_ord integer not null,
  eco_code integer not null,
  PRIMARY KEY(can_code, eco_code),
foreign key(can_code) references candidat(cod),
foreign key(eco_code) references ecole(code)
 );


CREATE TABLE etablissement(
  rne text primary key,
  type text,
  nom text not null,
  code_postal integer,
  ville text not null,
  pays text,
foreign key(pays) references pays(ind_liste_pays)
);

CREATE TABLE epreuve(
  epreuve_code integer primary key,
  epreuve text not null
);


CREATE TABLE concours (
  code_concours integer primary key,
  concours text not null
);

CREATE TABLE seriebac (
  code_serie integer primary key,
  serie text not null
);

CREATE TABLE mention (
  code_mention integer primary key,
  mention text not null
);

CREATE TABLE csp (
  code_csp integer primary key,
  csp text not null
);

//CREATE TABLE notes (
//  Num integer,
//  rang integer,
//  total integer,
//  Moyenne integer,
//  Bonification integer,
//  Maths integer,
//  Scphy integer,
//  Fr integer,
//  Si integer,
//  Ang integer
//);

CREATE TABLE notes (
    can_code integer,
    matiere_id integer,
    type_id integer,
    value real,
    primary key(can_code, matiere_id, type_id),
    foreign key(can_code) references candidat(code),
    foreign key(matiere_id) references matiere(matiere_id),
    foreign key(type_id) references typeExam(type_id)
);

CREATE TABLE matiere (
    matiere_id integer primary key,
    label text not null,
    code integer
);

CREATE TABLE typeExam (
    type_id integer primary key,
    label text not null
);

CREATE TABLE candidat (
  code integer PRIMARY_KEY,
  civ_lib integer ,
  nom text ,
  prenom text,
  autre_prenoms text,
  date_naissance integer ,
  arr_naissance integer ,
  ville_naissance text ,
  code_pays_naissance integer ,
  francais integer  ,
  ad_1 text ,
  ad_2 text,
  cod_pos integer ,
  com integer,
  pay_adr integer ,
  code_pay_natio integer ,
  mel text ,
  tel text,
  por text,
  email text,
  code_puissance integer,
  code_etabl integer ,
  epreuve_1 integer ,
  option_1 integer, 
  epreuve_2 integer ,
  option_2 integer, 
  epreuve_3 integer ,
  option_3 integer, 
  epreuve_4 integer ,
  option_4 integer, 
  code_ville_ecr integer,
  code_concours integer ,
  code_voie integer ,
  bac_date integer ,
  code_serie integer ,
  code_mention integer ,
  sujet_tipe text ,
  ine integer ,
  code_csp_pere integer ,
  code_csp_mere integer ,
  code_etat_dossier integer ,
  handicap integer,
  code_qualite integer,
  can_dep_bac integer ,
  resultat integer ,
  // resultat contient au choix "admis", "admis-spe", "admissible", "admissible-spe"
  // admis implique admis-spe (idem pour admissible)
  
  foreign key(code_pays_naissance) references pays(pays_code),
  foreign key(pay_adr) references pays(pays_code),
  foreign key(code_pay_natio) references pays(pays_code),
  foreign key(code_etabl) references etablissement(rne),
  foreign key(com) references commune(commune_index),
  foreign key(civ_lib) references civilite(civilite_index),
  foreign key(epreuve_1) references epreuve(epreuve_code),
  foreign key(option_1) references epreuve(epreuve_code),
  foreign key(epreuve_2) references epreuve(epreuve_code),
  foreign key(option_2) references epreuve(epreuve_code),
  foreign key(epreuve_3) references epreuve(epreuve_code),
  foreign key(option_3) references epreuve(epreuve_code),
  foreign key(epreuve_4) references epreuve(epreuve_code),
  foreign key(option_4) references epreuve(epreuve_code),
  foreign key(code_ville_ecr) references civilite(civilite_index),
  foreign key(code_serie) references seriebac(code_serie),
  foreign key(code_concours) references concours(code_concours),
  foreign key(code_voie) references voie(code_voie),
  foreign key(code_puissance) references puissance(code_puissance),
  foreign key(code_qualite) references qualite(code_qualite),
  foreign key(code_etat_dossier) references etat_dossier(code_etat_dossier),
  
  foreign key(code_mention) references mention(code_mention),
  foreign key(code_csp_pere) references csp(code_csp),
  foreign key(code_csp_mere) references csp(code_csp),
  foreign key(resultat) references resultat(resultat_index),

);
